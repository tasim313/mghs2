# Generated by Django 4.2.2 on 2023-07-09 06:27

import autoslug.fields
import core.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="user email address",
                    ),
                ),
                (
                    "username",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Admin", "admin"),
                            ("Manager", "manager"),
                            ("Human resources (HR)", "human resources (hr)"),
                            ("Accounts", "accounts"),
                        ],
                        db_index=True,
                        default="Manager",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "user_status",
                    models.CharField(
                        choices=[
                            ("Active", "active"),
                            ("Inactive", "inactive"),
                            ("Delete", "delete"),
                        ],
                        db_index=True,
                        default="Active",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        null=True,
                        populate_from=core.utils.get_appointment_slug,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Phone Number",
                    ),
                ),
                ("appointment_date", models.DateTimeField(blank=True, null=True)),
                ("message", models.TextField(blank=True, max_length=555, null=True)),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("Software Development", "software development"),
                            (
                                "Automated Business Solution for Manufacturing & Sales Industry",
                                "automated business solution for manufacturing & sales industry",
                            ),
                            (
                                "StepsERP, The Ultimate ERP for Manufacture Based Industry",
                                "stepsERP, the ultimate ERP for manufacture based Industry",
                            ),
                            (
                                "Human Resource Management and Accounting & Financial System for Hospitals & Diagnostics",
                                "Human Resource Management and Accounting &Financial System for Hospitals & Diagnostics",
                            ),
                            (
                                "Application Development (Client Server)",
                                "application development (Client Server)",
                            ),
                            (
                                "Web & Web Application Development",
                                "Web & Web Application Development",
                            ),
                            (
                                "Online Document Management System",
                                "Online Document Management System",
                            ),
                            (
                                "Android and iOS based Mobile Application Development",
                                "Android and iOS based Mobile Application Development",
                            ),
                            (
                                "Network Design, Administering & Consulting",
                                "Network Design, Administering & Consulting",
                            ),
                            (
                                "Total ICT Setup & Consultancy",
                                "Total ICT Setup & Consultancy",
                            ),
                        ],
                        db_index=True,
                        default="Software Development",
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BaseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Active", "active"),
                            ("Inactive", "inactive"),
                            ("Delete", "delete"),
                        ],
                        default="Active",
                        max_length=15,
                    ),
                ),
                (
                    "user_created",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="User_who_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created Person",
                    ),
                ),
                (
                    "user_updated",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="The_User_who_Updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated Person",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basemodel",
                    ),
                ),
                ("address", models.TextField(blank=True, max_length=555, null=True)),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, max_length=255, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "Phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        null=True,
                        populate_from=core.utils.get_contact_slug,
                        unique=True,
                    ),
                ),
            ],
            bases=("core.basemodel",),
        ),
        migrations.CreateModel(
            name="NewsEvents",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basemodel",
                    ),
                ),
                (
                    "choices",
                    models.CharField(
                        choices=[("News", "news"), ("Events", "events")],
                        db_index=True,
                        default="News",
                        max_length=100,
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        null=True,
                        populate_from=core.utils.get_news_events_slug,
                        unique=True,
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=300,
                        null=True,
                        verbose_name="Title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(11)],
                    ),
                ),
                ("publish_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-publish_date", "-id"],
            },
            bases=("core.basemodel",),
        ),
        migrations.CreateModel(
            name="AppointmentUserAdditionalInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.CharField(blank=True, max_length=50, null=True)),
                ("browser", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "operating_system",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("online", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "cookieEnabled",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("user_agent", models.CharField(max_length=255)),
                (
                    "appointment_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.appointment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsEventsFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "image",
                    versatileimagefield.fields.VersatileImageField(
                        blank=True,
                        null=True,
                        upload_to=core.utils.get_news_events_image,
                    ),
                ),
                (
                    "news_events",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="news_events_info",
                        to="core.newsevents",
                    ),
                ),
            ],
        ),
    ]
